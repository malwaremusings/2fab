#!/bin/sh

#
# A. generate a new encryption key (what will be the response to our challenge).
#
k="`expr \`date '+%d + %M + 13'\``"

#
# B. add write permission to the stage 2 file so that we can write directly to it
#      this is a bit of a security toss-up. by doing this, we don't need write 
#      permission (which would allow deletion of files over FTP) to $HOME
#      but it will allow write permission to the stage 2 file over FTP.
#      the latter is mitigated a tad by the fact that we will be writing to the 
#      file ourselves, and the file is encrypted and will be decrypted by the 
#      .profile file, so there is more to lose by making the directory writable
#      than by making the stage 2 file writable.
#      in either case, the write permissions would only be there for a small 
#      amount of time, but still, it opens a race condition which could 
#      potentially be exploited, especially if the user happens to press ctrl-s
#      in between these two chmod commands.
#
chmod 600 "$HOME/.profile.stage2"

#
# C. encrypt (re-encrypt) the stage 2 (security) script with the new key
#      this is the piece of information that changes for each succsesful login.
#    then remove write permissions from the file.
#
crypt "$k" < "$STAGETWO" > "$HOME/.profile.stage2" 2>/dev/null
chmod 400 "$HOME/.profile.stage2"

#
# D. remove the decrypted copy.
#
rm -f "$STAGETWO"

#
# E. change the HOME environment variable so that commands/processes use the 
#      hidden subdirectory for their configuration data rather than the user's 
#      official (as specified in the /etc/passwd file) home directory.
#
HOME=$HOME/__SUBDIR1__/__SUBDIR2__
cd "$HOME"

#
# F. run any user provided .profile file from the new (hidden subdirectory) 
#      home directory, after removing the sigint, sigquit, and sigkill trap 
#      handler (this will make the user's .profile interruptible).
#      the install.sh script will copy any existing .profile file from the 
#      user's official home directory to this location before installing 
#      .profile.template as .profile.
#
if [ -f "$HOME/.profile" ]; then
	trap 2 3 15

	. "$HOME/.profile"
fi
